---

application_name: dakara
project_name: dakara-server
django_project_name: dakara_server
project_front_name: dakara-client-web

# Url to the dakara-server release
project_archive_version: "1.2.0"
project_archive_url: https://github.com/DakaraProject/dakara-server/releases/download/{{ project_archive_version }}/dakara-server_{{ project_archive_version }}.zip

# Alternatively, it's possible to build the project from the source repos
# It takes more time to set up, requires nodejs to build the front
# But this allows to install development versions
#git_repo: https://github.com/DakaraProject/dakara-server.git
#git_front_repo: https://github.com/DakaraProject/dakara-server.git
#git_version: master
#git_front_version: master

# Virtualenv settings.
base_python_package: "{{ ansible_python_interpreter | default('/usr/bin/python') | basename }}"
virtualenv_python_version: "python3"


# Application settings.
virtualenv_path: "/webapps/{{ application_name }}"
project_path: "{{ virtualenv_path }}/{{ project_name }}"
django_path: "{{ project_path }}/{{ django_project_name }}"
project_front_path: "{{ virtualenv_path }}/{{ project_front_name }}"
application_log_dir: "{{ virtualenv_path }}/logs"
application_log_file: "{{ application_log_dir }}/gunicorn_supervisor.log"
requirements_file: "{{ project_path }}/requirements.txt"
clean_application_directory: no


# Gunicorn settings.
gunicorn_user: "{{ application_name }}"
gunicorn_group: webapps
gunicorn_socket_file: "{{ virtualenv_path }}/run/gunicorn.sock"
gunicorn_max_requests: 0
gunicorn_num_workers: 3


# Nginx settings.
nginx_access_log_file: "{{ application_log_dir }}/nginx_access.log"
nginx_error_log_file: "{{ application_log_dir }}/nginx_error.log"
nginx_static_dir: "{{ virtualenv_path }}/static/"

# Django settings
django_secret_key: "gjklhjksdghwhe;lfghaohfa;ohtpq3489fdgyt348tha;ihgtjk;asedgaiwu;egw;afgfg"
sqlite_file_location: "{{ virtualenv_path }}"
